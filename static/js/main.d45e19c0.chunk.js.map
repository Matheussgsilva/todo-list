{"version":3,"sources":["components/ListItem/styles.ts","components/ListItem/index.tsx","components/AddItem/styles.ts","components/AddItem/index.tsx","App.styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","done","ListItem","item","useState","isChecked","setIsChecked","type","checked","onChange","e","target","name","AddItem","onEnter","inputText","setInputText","className","placeholder","value","onKeyUp","code","Area","Header","h1","App","id","list","setList","taskName","newList","push","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAMaA,EAAYC,IAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,oVAiBTA,EAAO,eAAiB,OAjBf,oB,OCG7B,SAASC,EAAT,GAAkC,IAAfC,EAAc,EAAdA,KACtB,EAAkCC,mBAASD,EAAKF,MAAhD,mBAAOI,EAAP,KAAkBC,EAAlB,KAEA,OACI,eAAC,EAAD,CAAaL,KAAMI,EAAnB,UACI,uBACIE,KAAK,WACLC,QAASH,EACTI,SAAU,SAAAC,GAAC,OAAIJ,EAAaI,EAAEC,OAAOH,YAEzC,gCAAQL,EAAKS,U,mBCjBZd,EAAYC,IAAOC,IAAV,oYCMf,SAASa,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,QACtB,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KASA,OACI,eAAC,EAAD,WACI,qBAAKC,UAAU,QAAf,oBACA,uBACIV,KAAK,OACLW,YAAY,sBACZC,MAAOJ,EACPN,SAAU,SAAAC,GAAC,OAAIM,EAAaN,EAAEC,OAAOQ,QACrCC,QAfQ,SAACV,GACH,UAAXA,EAAEW,MAAmC,KAAdN,IACtBD,EAAQC,GACRC,EAAa,WCZlB,IAAMlB,EAAYC,IAAOC,IAAV,yGAMTsB,EAAOvB,IAAOC,IAAV,0FAMJuB,EAASxB,IAAOyB,GAAV,mJCwBJC,MA/Bf,WACE,MAAwBrB,mBAAiB,CACvC,CAAEsB,GAAI,EAAGd,KAAM,iBAAkBX,MAAM,GACvC,CAAEyB,GAAI,EAAGd,KAAM,4BAA6BX,MAAM,KAFpD,mBAAO0B,EAAP,KAAaC,EAAb,KAeA,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,4CAEA,cAACf,EAAD,CAASC,QAfO,SAACe,GACrB,IAAIC,EAAO,YAAOH,GAClBG,EAAQC,KAAK,CACXL,GAAIC,EAAKK,OAAS,EAClBpB,KAAMiB,EACN5B,MAAM,IAER2B,EAAQE,MAUHH,EAAKM,KAAI,SAAC9B,EAAM+B,GAAP,OACR,cAAChC,EAAD,CAAsBC,KAAMA,GAAb+B,YCjBVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d45e19c0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ntype ContainerProps = {\n    done: boolean;\n}\n\nexport const Container = styled.div(({ done }: ContainerProps) => (\n    `display: flex;\n    background-color: #20212C;\n    padding: 10px;\n    border-radius: 10px;\n    margin: 10px 0px;\n    align-items: center;\n\n    input{\n        width: 20px;\n        height:20px;\n        margin-right: 10px;\n        cursor: pointer;\n    }\n\n    label{\n        color: #CCC;\n        text-decoration: ${done ? 'line-through' : 'none'}\n    }\n    `\n));","import { useState } from 'react';\n\nimport * as C from './styles';\nimport { Item } from '../../types/Item';\n\ntype Props = {\n    item: Item\n}\n\nexport function ListItem({item}: Props) {\n    const [isChecked, setIsChecked] = useState(item.done);\n\n    return (\n        <C.Container done={isChecked}>\n            <input \n                type=\"checkbox\" \n                checked={isChecked}\n                onChange={e => setIsChecked(e.target.checked)}\n            />\n            <label>{item.name}</label>\n        </C.Container>\n    )\n}\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    border: 1px solid #555;\n    border-radius: 15px;\n    padding: 10px;\n    margin: 20px 0px;\n    display: flex;\n    aling-items: center;\n\n    .image {\n        margin-right: 5px;\n    }\n\n    input {\n        border: 0px;\n        background: transparent;\n        outline: 0;\n        color: #FFF;\n        font-size: 18px;\n        flex: 1;\n    }\n`;","import { useState, KeyboardEvent } from 'react';\n\nimport * as C from './styles'\n\ntype Props = {\n    onEnter: (taskName: string) => void\n}\n\nexport function AddItem({ onEnter}: Props) {\n    const [inputText, setInputText] = useState('');\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n        if(e.code === 'Enter'  && inputText !== '') {\n            onEnter(inputText);\n            setInputText('')\n        }\n    }\n\n    return (\n        <C.Container>\n            <div className=\"image\">‚ûï</div>\n            <input \n                type=\"text\"\n                placeholder='Adicione uma tarefa'\n                value={inputText}\n                onChange={e => setInputText(e.target.value)}\n                onKeyUp={handleKeyUp}\n            />\n        </C.Container>\n    );\n}","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    background-color: #17181F;\n    color: #797A81;\n    min-height: 100vh;\n`;\n\nexport const Area = styled.div`\n    margin: auto;\n    max-width: 980px;\n    padding: 10px;\n`;\n\nexport const Header = styled.h1`\n    margin: 0;\n    padding: 20px 0px;\n    color: #FFF;\n    text-align: center;\n    border-bottom: 1px solid #444;\n`;","import { useState } from 'react';\nimport { Item } from './types/Item';\nimport { ListItem } from './components/ListItem';\nimport { AddItem } from './components/AddItem';\n\nimport * as C from './App.styles'\n\nfunction App() {\n  const [list, setList] = useState<Item[]>([\n    { id: 1, name: 'Tarefa Exemplo', done: false},\n    { id: 2, name: 'Tarefa Exemplo Finalizada', done: true},\n  ]);\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push({\n      id: list.length + 1,\n      name: taskName,\n      done: false,\n    });\n    setList(newList);\n  } \n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>üìù Lista de Tarefas</C.Header>\n\n        <AddItem onEnter={handleAddTask} />\n\n        {list.map((item, index) => (\n          <ListItem key={index} item={item} />\n        ))}\n      </C.Area>\n    </C.Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}